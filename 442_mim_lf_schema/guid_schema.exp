SCHEMA GUID_SCHEMA;

(*
[[guid_attribute_select]]
A guid_attribute_select provides a selection of id_attribute or identification
assignment.
*)
  TYPE guid_attribute_select = SELECT
    (id_attribute,
     identification_assignment);
  END_TYPE;

  TYPE guid = STRING (36) FIXED;
  END_TYPE;

(*
[[guid_relationship_role]]
A guid_relationship_role enumerates the permitted roles associated with a
guid_relationship.
*)
  TYPE guid_relationship_role = ENUMERATION OF
    (SUPERSEDES,
     MERGE,
     SPLIT,
     DERIVE_FROM,
     SAME_AS,
     SIMILAR_TO,
     PARENT_CHILD);
  END_TYPE;

  ENTITY characterized_object;
  END_ENTITY;

  ENTITY general_property;
  END_ENTITY;

  ENTITY product;
  END_ENTITY;

(*
[[guid_attribute]]
A guid_attribute associates a UUID with an ordered collection of product data
items.
Only subtypes of id_attribute and of identification_assignment shall be
provided in identified_item.
*)
  ENTITY guid_attribute
    ABSTRACT
    SUPERTYPE OF (ONEOF(v5_guid_attribute, v4_guid_attribute) ANDOR guid_attribute_with_approximate_geometric_location);
      identifier      : guid;
      identified_item : LIST [1:?] OF UNIQUE guid_attribute_select;
    UNIQUE
      UR1 : identifier;
  END_ENTITY;

(*
[[v5_guid_attribute]]
A v5_guid_attribute is a guid_attribute that provides a UUID that conforms to
version 5 of the relevant rfc. The name is not provided. The namespace is not
provided.
*)
  ENTITY v5_guid_attribute
    SUBTYPE OF(guid_attribute);
  END_ENTITY;

(*
[[hash_based_v5_guid_attribute]]
A hash_based_v5_guid_attribute is a v5_guid_attribute that provides a UUID that
is a hash of the data items specified in the identified_items list attribute in
the applied_guid_attribute.
*)
  ENTITY hash_based_v5_guid_attribute
    SUBTYPE OF(v5_guid_attribute);
      hash_function      : STRING;
    DERIVE
      root_for_aggregate : guid_attribute_select := SELF\guid_attribute.identified_item[1];
    WHERE
      WR1 : hash_function <> '';
  END_ENTITY;

  ENTITY id_attribute;
  END_ENTITY;

  ENTITY identification_assignment;
  END_ENTITY;

(*
[[v4_guid_attribute]]
A v4_guid_attribute is a guid_attribute that provides a UUID that conforms to
version 4 of the relevant rfc.
*)
  ENTITY v4_guid_attribute
    SUBTYPE OF(guid_attribute);
  END_ENTITY;

(*
[[guid_attribute_with_approximate_geometric_location]]
A guid_attribute_with_approximate_geometric_location is a guid_attribute that provides an
approximate location in cartesian space of an item or items that has a UUID
assigned.
*)
  ENTITY guid_attribute_with_approximate_geometric_location
    SUBTYPE OF(guid_attribute);
      approximate_location    : cartesian_point;
      location_representation : shape_representation;
    WHERE
      WR1 : location_representation IN using_representations(approximate_location);
  END_ENTITY;

  ENTITY shape_representation;
  END_ENTITY;

  ENTITY cartesian_point;
  END_ENTITY;

  ENTITY dimensional_location;
  END_ENTITY;

  ENTITY characterized_object_relationship;
  END_ENTITY;

  ENTITY datum_feature;
  END_ENTITY;

  ENTITY datum_system;
  END_ENTITY;

  ENTITY dimension_related_tolerance_zone_element;
  END_ENTITY;

  ENTITY dimensional_characteristic_representation;
  END_ENTITY;

  ENTITY dimensional_size;
  END_ENTITY;

  ENTITY general_property_relationship;
  END_ENTITY;

  ENTITY geometric_tolerance;
  END_ENTITY;

  ENTITY geometric_tolerance_auxiliary_classification;
  END_ENTITY;

  ENTITY gps_filter;
  END_ENTITY;

  ENTITY gps_filtration_specification;
  END_ENTITY;

  ENTITY limits_and_fits;
  END_ENTITY;

  ENTITY placed_datum_target_feature;
  END_ENTITY;

  ENTITY plus_minus_tolerance;
  END_ENTITY;

  ENTITY product_definition;
  END_ENTITY;

  ENTITY product_definition_formation;
  END_ENTITY;

  ENTITY product_definition_formation_relationship;
  END_ENTITY;

  ENTITY product_definition_relationship;
  END_ENTITY;

  ENTITY property_definition;
  END_ENTITY;

  ENTITY representation;
  END_ENTITY;

  ENTITY representation_item;
  END_ENTITY;

  ENTITY runout_zone_orientation;
  END_ENTITY;

  ENTITY topological_representation_item;
  END_ENTITY;

  ENTITY tolerance_with_statistical_distribution;
  END_ENTITY;

  ENTITY tolerance_value;
  END_ENTITY;

  ENTITY shape_aspect;
  END_ENTITY;

  ENTITY shape_aspect_relationship;
  END_ENTITY;

  ENTITY tolerance_zone_form;
  END_ENTITY;

  ENTITY tolerance_zone_definition;
  END_ENTITY;

(*
[[guid_relationship]]
A guid_relationship relates two guids and provides a role for that relationship.
*)
  ENTITY guid_relationship;
      identifier : guid;
      guid_1     : guid;
      guid_2     : guid;
      role       : guid_relationship_role;
      tree_root  : OPTIONAL guid_tree_root;
    UNIQUE
      UR1 : identifier;
    WHERE
      WR1 : guid_1 <> guid_2;;
      WR2 : guid_1 <> identifier;;
      WR3 : identifier <> guid_2;;
      wr4 : NOT ((parent_child) = role) OR EXISTS(tree_root);
  END_ENTITY;

(*
[[guid_provenance]]
A guid_provenance is the specification of a sequence of guid_relationships that
provides historical record of those relationshps. The sequence is a simple list
form.
*)
  ENTITY guid_provenance;
      identifier : guid;
      content    : LIST [1:?] OF UNIQUE guid_relationship;
    UNIQUE
      UR1 : identifier;
  END_ENTITY;

(*
[[guid_context_role]]
A guid_context_role associates a role to an guid.
*)
  ENTITY guid_context_role;
      identifier : guid;
      role       : STRING;
    UNIQUE
      UR1 : identifier;
    WHERE
      WR1 : role <> '';
  END_ENTITY;

  ENTITY guid_tree_root
    SUBTYPE OF(guid_context_role);
  DERIVE
   SELF\guid_context_role.role : STRING := 'root';
    INVERSE
      members : SET [1:?] OF guid_relationship FOR tree_root;
 END_ENTITY;

END_SCHEMA;
